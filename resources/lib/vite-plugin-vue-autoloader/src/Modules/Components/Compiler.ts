import fs from 'node:fs';
import path from 'node:path';
import { normalizePath, type ResolvedConfig } from 'vite';
import { type ComponentsMap } from '../../Services/Collector';

export function compileComponentsModule(components: ComponentsMap) {
  let lines: string[] = [];

  components.forEach((resolved) => lines.push(`import ${resolved.global} from '${resolved.path}';`));
  lines.push(`export {`);
  components.forEach((resolved) => lines.push(`  ${resolved.global},`));
  lines.push(`};`);
  lines.push(``);
  lines.push(`export function createOtherSoftwareAutoloader() {`);
  lines.push(`  return {`);
  lines.push(`    install(app) {`);
  components.forEach((resolved) => lines.push(`      app.component('${resolved.global}', ${resolved.global});`));
  lines.push(`    },`);
  lines.push(`  };`);
  lines.push(`};`);
  lines.push(``);

  return lines.join('\n');
}

export function writeComponentsDeclarations(config: ResolvedConfig, target: string, components: ComponentsMap) {
  let directory = path.resolve(config.root, target);
  let declarations = path.resolve(directory, 'components.d.ts');
  let lines: string[] = [];

  lines.push(`// THIS FILE IS AUTOGENERATED!`);
  lines.push(`// DO NOT EDIT!`);
  lines.push(``);
  lines.push(`declare module '@app/components' {`);
  lines.push(`  import { Plugin } from 'vue';`);
  lines.push(`  export function createOtherSoftwareAutoloader(): Plugin;`);
  lines.push(``);
  components.forEach((resolved) => lines.push(`  export { default as ${resolved.global} } from '${normalizePath(path.relative(directory, resolved.path))}';`));
  lines.push(`}`);
  lines.push(``);

  fs.writeFileSync(declarations, lines.join('\n'));
}

export function writeVueDeclarations(config: ResolvedConfig, target: string, components: ComponentsMap) {
  let directory = path.resolve(config.root, target);
  let declarations = path.resolve(directory, 'vue.d.ts');
  let lines: string[] = [];

  lines.push(`// THIS FILE IS AUTOGENERATED!`);
  lines.push(`// DO NOT EDIT!`);
  lines.push(``);
  lines.push(`declare module '@vue/runtime-core' {`);
  lines.push(`  export interface GlobalComponents {`);
  components.forEach((resolved) => lines.push(`    ${resolved.global}: typeof import('${normalizePath(path.relative(directory, resolved.path))}')['default'],`));
  lines.push(`  }`);
  lines.push(`}`);
  lines.push(``);
  lines.push(`export {}`);
  lines.push(``);

  fs.writeFileSync(declarations, lines.join('\n'));
}
