import path from 'node:path';
import fs from 'node:fs';
import { ComponentsMap } from '../../Services/Collector';
import { ResolvedConfig } from 'vite';

export function compileViewsModule(views: ComponentsMap) {
  let lines: string[] = [];

  views.forEach((resolved) => lines.push(`import ${resolved.name} from '${resolved.path}';`));
  lines.push(``);
  lines.push(`const ViewsRepository = {`);
  views.forEach((resolved) => lines.push(`  '${resolved.laravel}': ${resolved.name},`));
  lines.push(`};`);
  lines.push(``);
  lines.push(`export function createViewResolver(name) {`);
  lines.push(`  const view = ViewsRepository[name];`);
  lines.push(``);
  lines.push(`  if (!view) {`);
  lines.push(`    throw new Error('View "' + name + '" not found!');`);
  lines.push(`  }`);
  lines.push(``);
  lines.push(`  return view;`);
  lines.push(`}`);
  lines.push(``);

  return lines.join('\n');
}

export function writeComponentsDeclarations(config: ResolvedConfig, target: string) {
  let directory = path.resolve(config.root, target);
  let declarations = path.resolve(directory, 'views.d.ts');
  let lines: string[] = [];

  lines.push(`// THIS FILE IS AUTOGENERATED!`);
  lines.push(`// DO NOT EDIT!`);
  lines.push(``);
  lines.push(`declare module '@app/views' {`);
  lines.push(`  export function createViewResolver(name: string): any;`);
  lines.push(`}`);
  lines.push(``);

  fs.writeFileSync(declarations, lines.join('\n'));
}

export function writePhpstormMeta(config: ResolvedConfig, target: string, views: ComponentsMap) {
  let directory = path.resolve(config.root, target);
  let meta = path.resolve(directory, '.phpstorm.meta.php');
  let lines: string[] = [];

  let compiled: string[] = [];

  views.forEach((view) => compiled.push(`'${view.laravel}'`));

  lines.push(`<?php`);
  lines.push(``);
  lines.push(`namespace PHPSTORM_META {`);
  lines.push(`  registerArgumentsSet('vueApplicationViews', ${compiled.join(', ')});`);
  lines.push(``);
  lines.push(`  expectedArguments(\\OtherSoftware\\Bridge\\ResponseFactory::view(), 0, argumentsSet('vueApplicationViews'));`);
  lines.push(`  expectedArguments(\\OtherSoftware\\Support\\Facades\\Vue::view(), 0, argumentsSet('vueApplicationViews'));`);
  lines.push(`}`);
  lines.push(``);

  fs.writeFileSync(meta, lines.join('\n'));
}
